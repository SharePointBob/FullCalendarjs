function modifyTableRows() {
    // Select each row you want to modify based on a common class
    $('tr.tabletop.ver').each(function() {
        var $row = $(this);

        // Find all checkboxes in the row that end with 'N', representing 'No' choices
        $row.find('input[type="checkbox"][id$="N"]').each(function() {
            var $noCheckbox = $(this);
            var noCheckboxId = $noCheckbox.attr('id');
            var baseId = noCheckboxId.slice(0, -1);  // Remove the last character 'N' to get the base ID

            var $yesCheckbox = $row.find('input[type="checkbox"][id="' + baseId + 'Y"]');

            if ($yesCheckbox.length === 0) { // Check if the Yes checkbox already exists or not
                // Clone the No checkbox to create a Yes checkbox
                $yesCheckbox = $noCheckbox.clone().attr('id', baseId + 'Y');
                $noCheckbox.before($yesCheckbox); // Insert the Yes checkbox before the No checkbox
            }

            // Hidden checkbox to maintain the state
            var $hiddenCheckbox = $row.find('input[type="checkbox"][id="' + baseId + '_hidden"]');
            if ($hiddenCheckbox.length === 0) { // Check if hidden checkbox already exists
                $hiddenCheckbox = $('<input>', {
                    type: 'checkbox',
                    id: baseId + '_hidden',
                    name: $yesCheckbox.attr('name'),
                    style: 'display: none;'
                }).insertAfter($yesCheckbox);
            }

            // Assign onchange events to handle checkbox interactions
            $yesCheckbox.off('change').on('change', function() {
                $hiddenCheckbox.prop('checked', true);
                $noCheckbox.prop('checked', false);
            });

            $noCheckbox.off('change').on('change', function() {
                $yesCheckbox.prop('checked', false);
                $hiddenCheckbox.prop('checked', false);
            });
        });
    });
}

$(document).ready(function() {
    modifyTableRows();
});