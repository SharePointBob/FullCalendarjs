function getQuestions(location) {
    // Fetch questions from the SharePoint list
    var call = $.ajax({
        url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('FormQuestions')/items?$filter=Location eq '" + location + "'",
        type: "GET",
        dataType: "json",
        headers: {
            Accept: "application/json;odata=verbose"
        }
    });

    call.done(function(data, textStatus, jqXHR) {
        // Parse the questions and organize them by section
        var items = data.d.results;
        var questionsBySection = {};

        items.forEach(function(item) {
            var section = item.Section;
            if (!questionsBySection[section]) {
                questionsBySection[section] = [];
            }
            questionsBySection[section].push(item.Title);
        });

        // Load questions into the table
        for (var section in questionsBySection) {
            loadQuestions(section, questionsBySection[section]);
        }
    });

    call.fail(function(jqXHR, textStatus, errorThrown) {
        alert("Error retrieving questions. \n" + jqXHR.responseText);
    });
}

function loadQuestions(section, questions) {
    
    // Loads questions for the current section
    for (var i = 0; i < questions.length; i++) {
        versionHistory += 
        "<tr class='border_bottom'>" +
            "<td>" + questions[i] + "</td>" +
            "<td><input type='checkbox' /></td>" +
            "<td><input type='checkbox' /></td>" +
            "<td><textarea class='submitTextarea req'></textarea></td>" +
        "</tr>";
    }
}
<table id="questionsTable">
    <tr class="yellow_headings">        
        <td colspan=6><h3><b>Section 1</b></h3></td>
    </tr>
    <tr>
        <td></td>        
        <td><b>Yes</b></td>
        <td><b>No</b></td>
        <td><b>Comments</b></td>
    </tr>
    <tr id="section1Section" class="border_bottom exampleSection"></tr>

    <tr class="yellow_headings">        
        <td colspan=6><h3><b>Section 2</b></h3></td>
    </tr>
    <tr>
        <td></td>        
        <td><b>Yes</b></td>
        <td><b>No</b></td>
        <td><b>Comments</b></td>
    </tr>
    <tr id="section2Section" class="border_bottom exampleSection"></tr>

    <!-- Add more sections as needed -->
</table>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Loading Cursor Animation</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="cursor" class="cursor">█</div>
    <script src="script.js"></script>
</body>
</html>

body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #000;
    color: #FFF;
    font-family: 'Courier New', Courier, monospace;
    font-size: 24px;
}

.cursor {
    animation: blinkCursor 1s infinite;
}

@keyframes blinkCursor {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0;
    }
}
document.addEventListener('DOMContentLoaded', function() {
    const cursor = document.getElementById('cursor');
    let isLarge = true;

    setInterval(() => {
        if (isLarge) {
            cursor.textContent = '_';  // Lowercase representation (underscore)
        } else {
            cursor.textContent = '█';  // Uppercase representation (large rectangle)
        }
        isLarge = !isLarge;
    }, 1000);  // Switch every second
});

document.addEventListener('DOMContentLoaded', function() {
    const cursor = document.getElementById('cursor');
    let isLarge = true;

    function changeCursor() {
        cursor.style.animation = 'fadeOut 1s forwards'; // Start by fading out

        // After the fade out, change the character and fade in
        setTimeout(() => {
            cursor.textContent = isLarge ? '_' : '█';
            cursor.style.animation = 'fadeIn 1s forwards';
            isLarge = !isLarge;
        }, 1000);
    }

    // Initial fade in without changing character
    cursor.style.animation = 'fadeIn 1s forwards';

    // Change cursor every 2 seconds after initial fade in
    setInterval(changeCursor, 2000);
});
